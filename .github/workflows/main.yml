name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build-php:
    name: Prepare PHP
    runs-on: ${{ matrix.image }}

    strategy:
      matrix:
        image: [ubuntu-20.04]
        php: [8.0.11]

    steps:
      - name: Build and prepare PHP cache
        uses: pmmp/setup-php-action@e232f72a4330a07aae8418e8aa56b64efcdda636
        with:
          php-version: ${{ matrix.php }}
          install-path: "./bin"

  phpstan:
    name: PHPStan analysis
    needs: build-php
    runs-on: ${{ matrix.image }}

    strategy:
      fail-fast: false
      matrix:
        image: [ubuntu-20.04]
        php: [8.0.11]

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: pmmp/setup-php-action@e232f72a4330a07aae8418e8aa56b64efcdda636
        with:
          php-version: ${{ matrix.php }}
          install-path: "./bin"

      - name: Install Composer
        run: curl -sS https://getcomposer.org/installer | php

      - name: Restore Composer package cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/composer/files
            ~/.cache/composer/vcs
          key: "composer-v2-cache-${{ matrix.php }}-${{ hashFiles('./composer.lock') }}"
          restore-keys: |
            composer-v2-cache-

      - name: Install Composer dependencies
        run: php composer.phar install --prefer-dist --no-interaction

      - name: Run PHPStan
        run: ./vendor/bin/phpstan analyze --no-progress --memory-limit=2G

  phpunit:
    name: PHPUnit tests
    needs: build-php
    runs-on: ${{ matrix.image }}
    strategy:
      fail-fast: false
      matrix:
        image: [ubuntu-20.04]
        php: [8.0.11]

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: pmmp/setup-php-action@e232f72a4330a07aae8418e8aa56b64efcdda636
        with:
          php-version: ${{ matrix.php }}
          install-path: "./bin"

      - name: Install Composer
        run: curl -sS https://getcomposer.org/installer | php

      - name: Restore Composer package cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/composer/files
            ~/.cache/composer/vcs
          key: "composer-v2-cache-${{ matrix.php }}-${{ hashFiles('./composer.lock') }}"
          restore-keys: |
            composer-v2-cache-

      - name: Install Composer dependencies
        run: php composer.phar install --prefer-dist --no-interaction

      - name: Run PHPUnit tests
        run: ./vendor/bin/phpunit --bootstrap vendor/autoload.php --fail-on-warning tests/phpunit

  integration:
    name: Integration tests
    needs: build-php
    runs-on: ${{ matrix.image }}
    strategy:
      fail-fast: false
      matrix:
        image: [ubuntu-20.04]
        php: [8.0.11]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Setup PHP
        uses: pmmp/setup-php-action@e232f72a4330a07aae8418e8aa56b64efcdda636
        with:
          php-version: ${{ matrix.php }}
          install-path: "./bin"

      - name: Install Composer
        run: curl -sS https://getcomposer.org/installer | php

      - name: Restore Composer package cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/composer/files
            ~/.cache/composer/vcs
          key: "composer-v2-cache-${{ matrix.php }}-${{ hashFiles('./composer.lock') }}"
          restore-keys: |
            composer-v2-cache-

      - name: Install Composer dependencies
        run: php composer.phar install --no-dev --prefer-dist --no-interaction

      - name: Run integration tests
        run: ./tests/travis.sh -t4

  build-prod:
    name: Build production software
    needs: build-php
    runs-on: ${{ matrix.image }}
    strategy:
      fail-fast: false
      matrix:
        image: [ubuntu-20.04]
        php: [8.0.11]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Setup PHP
        uses: pmmp/setup-php-action@e232f72a4330a07aae8418e8aa56b64efcdda636
        with:
          php-version: ${{ matrix.php }}
          install-path: "./bin"

      - name: Install Composer
        run: curl -sS https://getcomposer.org/installer | php

      - name: Restore Composer package cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/composer/files
            ~/.cache/composer/vcs
          key: "composer-v2-cache-${{ matrix.php }}-${{ hashFiles('./composer.lock') }}"
          restore-keys: |
            composer-v2-cache-

      - name: Install Composer dependencies
        run: php composer.phar install --no-dev --classmap-authoritative

      - name: Install jo
        run: sudo apt-get install jo

      - name: Patch VersionInfo
        id: version_info
        run: |
          export CalcedBuildNumber=$((1000+$GITHUB_RUN_NUMBER))
          echo ::set-output name=BUILD_NUMBER::$CalcedBuildNumber
      
      - name: Minify BedrockData JSON files
        run: php vendor/pocketmine/bedrock-data/.minify_json.php

      - name: Build server software & Update API
        env: 
          GHTOKEN: ${{ secrets.GHTOKEN }}
        run: |
            export BuildNumber=${{ steps.version_info.outputs.BUILD_NUMBER }}
            chmod +x ./build/build-api.sh && ./build/build-api.sh
            php -dphar.readonly=0 build/server-phar.php --git ${{ github.sha }} --build ${{ steps.version_info.outputs.BUILD_NUMBER }}

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: UNWDS_${{ steps.version_info.outputs.BUILD_NUMBER }}
          path: ${{ github.workspace }}/UNWDS.phar


  codegen:
    name: Generated Code consistency checks
    needs: build-php
    runs-on: ${{ matrix.image }}
    strategy:
      fail-fast: false
      matrix:
        image: [ubuntu-20.04]
        php: [8.0.11]

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: pmmp/setup-php-action@e232f72a4330a07aae8418e8aa56b64efcdda636
        with:
          php-version: ${{ matrix.php }}
          install-path: "./bin"

      - name: Install Composer
        run: curl -sS https://getcomposer.org/installer | php

      - name: Restore Composer package cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/composer/files
            ~/.cache/composer/vcs
          key: "composer-v2-cache-${{ matrix.php }}-${{ hashFiles('./composer.lock') }}"
          restore-keys: |
            composer-v2-cache-

      - name: Install Composer dependencies
        run: php composer.phar install --no-dev --prefer-dist --no-interaction

      - name: Regenerate registry annotations
        run: php build/generate-registry-annotations.php src

      - name: Regenerate KnownTranslation APIs
        run: php build/generate-known-translation-apis.php

      - name: Verify code is unchanged
        run: |
          git diff
          git diff --quiet

  codestyle:
    name: Code Style checks
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP and tools
        uses: shivammathur/setup-php@2.15.0
        with:
          php-version: 8.0
          tools: php-cs-fixer:3.2

      - name: Run PHP-CS-Fixer
        run: php-cs-fixer fix --dry-run --diff
