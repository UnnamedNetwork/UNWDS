name: Build & Make releases

on: [push]

jobs:
  build-php:
    name: Prepare PHP
    runs-on: ${{ matrix.image }}

    strategy:
      matrix:
        image: [ubuntu-20.04]
        php: [7.4.16]

    steps:
      - uses: actions/checkout@v2 #needed for build.sh
      - name: Check for PHP build cache
        id: php-build-cache
        uses: actions/cache@v2
        with:
          path: "./bin"
          key: "php-build-generic-${{ matrix.php }}-${{ matrix.image }}-${{ hashFiles('./tests/gh-actions/build.sh') }}"
 
      - name: Compile PHP
        if: steps.php-build-cache.outputs.cache-hit != 'true'
        run: chmod +x ./tests/gh-actions/build.sh && ./tests/gh-actions/build.sh "${{ matrix.php }}"

  output_push:
    name: Build optimised & Push
    needs: build-php
    runs-on: ${{ matrix.image }}
    strategy:
      fail-fast: false
      matrix:
        image: [ubuntu-20.04]
        php: [7.4.16]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Restore PHP build cache
        id: php-build-cache
        uses: actions/cache@v2
        with:
          path: "./bin"
          key: "php-build-generic-${{ matrix.php }}-${{ matrix.image }}-${{ hashFiles('./tests/gh-actions/build.sh') }}"

      - name: Kill build on PHP build cache miss (should never happen)
        if: steps.php-build-cache.outputs.cache-hit != 'true'
        run: exit 1

      - name: Install cached PHP's dependencies
        if: steps.php-build-cache.outputs.cache-hit == 'true'
        run: chmod +x ./bin/php7/install-dependencies.sh && ./bin/php7/install-dependencies.sh

      - name: Prefix PHP to PATH
        run: echo "$(pwd)/bin/php7/bin" >> $GITHUB_PATH

      - name: Install Composer
        run: curl -sS https://getcomposer.org/installer | php

      - name: Restore Composer package cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/composer/files
            ~/.cache/composer/vcs
          key: "composer-v2-cache-${{ matrix.php }}-${{ hashFiles('./composer.lock') }}"
          restore-keys: |
            composer-v2-cache-

      - name: Install Composer dependencies
        run: php composer.phar install --no-dev --classmap-authoritative

      - name: Optimise server software
        run: |
          PM_PREPROCESSOR_PATH="$GITHUB_WORKSPACE/build/preprocessor"
          php "$PM_PREPROCESSOR_PATH/PreProcessor.php" --path=src --multisize || (echo "Preprocessor exited with code $?" && exit 1)
          VENDOR_PM="$GITHUB_WORKSPACE/vendor"
          VENDOR_PM_BACKUP="$GITHUB_WORKSPACE/vendor-before-preprocess"
          cp -r "$VENDOR_PM" "$VENDOR_PM_BACKUP"
          for f in $(ls $VENDOR_PM/pocketmine); do
            echo "Processing directory \"$f\"..."
            php "$PM_PREPROCESSOR_PATH/PreProcessor.php" --path="$VENDOR_PM/pocketmine/$f" --multisize || (echo "Preprocessor exited with code $?" && exit 1)
          done
          
      - name: Build & push
        env: 
          GHTOKEN: ${{ secrets.GHTOKEN }}
        run: chmod +x ./build/build-phar.sh && ./build/build-phar.sh

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GHTK2 }}"
          automatic_release_tag: "dev-latest"
          prerelease: true
          title: "UNWDS Development Build"
          files: |
            UNWDS.phar

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: UNWDS
          path: ${{ github.workspace }}/UNWDS.phar
